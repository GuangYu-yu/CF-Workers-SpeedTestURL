export default{async fetch(e){const t=new URL(e.url),n=t.pathname.slice(1),s=(e=>{if(!e)return 0;const t=e.match(/^(\d+)([kKmMgG]b?)?$/);if(!t)return null;let n=parseInt(t[1],10);const s=(t[2]||"").toLowerCase();return s.startsWith("k")&&(n*=1e3),s.startsWith("m")&&(n*=1e6),s.startsWith("g")&&(n*=1e9),Math.min(n,1e9)})(n);if(null===s)return new Response("Bad Request",{status:400});if(0===s)return new Response(null,{status:204});const r=t.searchParams.has("direct"),a=t.searchParams.has("zero");a&&(r=!0);const o=new Headers({"Content-Type":"application/octet-stream","Content-Length":s.toString(),"X-Content-Type-Options":"nosniff","Cache-Control":"no-store","X-Download-Options":"noopen","Referrer-Policy":"no-referrer"});if(!r){const e=await fetch(`https://speed.cloudflare.com/__down?bytes=${s}`);return new Response(e.body,{status:e.status,headers:o})}let c=0;const u=new ReadableStream({pull(e){const t=s-c;if(t<=0)return e.close();const n=Math.min(t,65536);e.enqueue(a?new Uint8Array(n):crypto.getRandomValues(new Uint8Array(n))),c+=n}});return new Response(u,{status:200,headers:o})}};
